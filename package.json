{
  "name": "smd-mcp-feedback-collector",
  "version": "1.3.9",
  "description": "基于Node.js的MCP反馈收集器 - 支持AI工作汇报和用户反馈收集",
  "main": "dist/index.js",
  "bin": {
    "smd-mcp-feedback-collector": "dist/cli.js"
  },
  "type": "module",
  "engines": {
    "node": ">=18.0.0"
  },
  "keywords": [
    "mcp",
    "feedback",
    "ai",
    "chat",
    "nodejs",
    "model-context-protocol",
    "claude",
    "anthropic"
  ],
  "author": "SMD",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Songmengdi/mcp-feedback-collector.git"
  },
  "homepage": "https://github.com/Songmengdi/mcp-feedback-collector#readme",
  "bugs": {
    "url": "https://github.com/Songmengdi/mcp-feedback-collector/issues"
  },
  "scripts": {
    "install-deps": "cd frontend && npm install && cd .. && npm install",
    "build": "npm run build:frontend && tsc",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "tsc",
    "dev": "tsx watch --clear-screen=false src/cli.ts",
    "dev:backend": "tsx src/cli.ts dev",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:full": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "start": "node dist/cli.js",
    "start:persistent": "npm run build && node dist/cli.js start --persistent",
    "start:dev": "tsx src/cli.ts start --persistent",
    "client": "node scripts/mcp-client.js",
    "client:debug": "node scripts/mcp-client.js --debug",
    "test:client": "node scripts/test-client.js",
    "test:tool-call": "node scripts/test-tool-call.js",
    "test:multi-client": "node scripts/test-multi-client.js",
    "test:race-condition": "npm run build && node scripts/test-race-condition.js",
    "lint": "eslint src/ --ext .ts",
    "lint:fix": "eslint src/ --ext .ts --fix",
    "clean": "node -e \"const fs=require('fs'); if(fs.existsSync('dist')){fs.rmSync('dist', {recursive: true, force: true})}\"",
    "clean:all": "npm run clean && cd frontend && rm -rf dist",
    "prepare-release": "node scripts/prepare-release.cjs",
    "prepublishOnly": "npm run clean && npm run build",
    "publish:beta": "npm publish --tag beta",
    "publish:latest": "npm publish"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.12.3",
    "@types/ws": "^8.18.1",
    "async-mutex": "^0.5.0",
    "commander": "^11.1.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "find-free-port": "^2.0.0",
    "helmet": "^7.1.0",
    "node-fetch": "^3.3.2",
    "open": "^9.1.0",
    "socket.io": "^4.7.2",
    "ws": "^8.18.2"
  },
  "devDependencies": {
    "@types/compression": "^1.7.3",
    "@types/cors": "^2.8.14",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.5",
    "@types/node": "^20.8.0",
    "@types/node-fetch": "^2.6.6",
    "@typescript-eslint/eslint-plugin": "^6.7.0",
    "@typescript-eslint/parser": "^6.7.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.50.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1",
    "tsx": "^3.14.0",
    "typescript": "^5.2.2"
  },
  "files": [
    "dist",
    "README.md",
    "LICENSE",
    "USER_GUIDE.md",
    "CONFIGURATION.md",
    "TROUBLESHOOTING.md",
    "CURSOR_CONFIGURATION.md",
    "ARCHITECTURE.md",
    "DOCUMENTATION_INDEX.md",
    "RELEASE_NOTES.md",
    "REMOTE_SERVER_CONFIGURATION.md"
  ]
}